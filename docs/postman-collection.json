{
  "info": {
    "_postman_id": "firebase-notification-api",
    "name": "Firebase Notification API",
    "description": "Collection untuk testing Firebase Notification API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response should be JSON', function () {",
              "    pm.response.to.be.json;",
              "});",
              "",
              "pm.test('Should return success true', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": ["{{base_url}}"],
          "path": ["health"]
        },
        "description": "Endpoint untuk mengecek status API"
      },
      "response": []
    },
    {
      "name": "Send to Device",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Should return success true', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "});",
              "",
              "pm.test('Should have messageId', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.messageId).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"token\": \"{{fcm_token}}\",\n  \"notification\": {\n    \"title\": \"Test Notification\",\n    \"body\": \"Ini adalah notifikasi test dari Postman\",\n    \"imageUrl\": \"https://via.placeholder.com/512x512.png?text=Test\"\n  },\n  \"data\": {\n    \"source\": \"postman\",\n    \"timestamp\": \"{{$timestamp}}\",\n    \"test_id\": \"{{$randomUUID}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/send-to-device",
          "host": ["{{base_url}}"],
          "path": ["send-to-device"]
        },
        "description": "Mengirim notifikasi ke satu perangkat"
      },
      "response": []
    },
    {
      "name": "Send to Multiple Devices",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Should return success true', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "});",
              "",
              "pm.test('Should have responses array', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.responses).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tokens\": [\"{{fcm_token}}\", \"{{fcm_token_2}}\"],\n  \"notification\": {\n    \"title\": \"Broadcast Notification\",\n    \"body\": \"Pesan broadcast untuk beberapa perangkat\",\n    \"imageUrl\": \"https://via.placeholder.com/512x512.png?text=Broadcast\"\n  },\n  \"data\": {\n    \"type\": \"broadcast\",\n    \"campaign_id\": \"{{$randomUUID}}\",\n    \"timestamp\": \"{{$timestamp}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/send-to-multiple-devices",
          "host": ["{{base_url}}"],
          "path": ["send-to-multiple-devices"]
        },
        "description": "Mengirim notifikasi ke beberapa perangkat sekaligus"
      },
      "response": []
    },
    {
      "name": "Send to Topic",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Should return success true', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "});",
              "",
              "pm.test('Should have messageId and topic', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.messageId).to.exist;",
              "    pm.expect(jsonData.data.topic).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"topic\": \"{{topic_name}}\",\n  \"notification\": {\n    \"title\": \"Topic Notification\",\n    \"body\": \"Ini adalah notifikasi untuk semua subscriber topic {{topic_name}}\",\n    \"imageUrl\": \"https://via.placeholder.com/512x512.png?text=Topic\"\n  },\n  \"data\": {\n    \"category\": \"topic_message\",\n    \"topic\": \"{{topic_name}}\",\n    \"timestamp\": \"{{$timestamp}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/send-to-topic",
          "host": ["{{base_url}}"],
          "path": ["send-to-topic"]
        },
        "description": "Mengirim notifikasi ke topic"
      },
      "response": []
    },
    {
      "name": "Subscribe to Topic",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Should return success true', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "});",
              "",
              "pm.test('Should have subscription data', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.topic).to.exist;",
              "    pm.expect(jsonData.data.successCount).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tokens\": [\"{{fcm_token}}\"],\n  \"topic\": \"{{topic_name}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/subscribe-to-topic",
          "host": ["{{base_url}}"],
          "path": ["subscribe-to-topic"]
        },
        "description": "Subscribe FCM token ke topic"
      },
      "response": []
    },
    {
      "name": "Unsubscribe from Topic",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Should return success true', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "});",
              "",
              "pm.test('Should have unsubscription data', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.topic).to.exist;",
              "    pm.expect(jsonData.data.successCount).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tokens\": [\"{{fcm_token}}\"],\n  \"topic\": \"{{topic_name}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/unsubscribe-from-topic",
          "host": ["{{base_url}}"],
          "path": ["unsubscribe-from-topic"]
        },
        "description": "Unsubscribe FCM token dari topic"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api/notifications",
      "type": "string"
    },
    {
      "key": "fcm_token",
      "value": "YOUR_FCM_TOKEN_HERE",
      "type": "string",
      "description": "FCM token perangkat utama untuk testing"
    },
    {
      "key": "fcm_token_2",
      "value": "YOUR_SECOND_FCM_TOKEN_HERE",
      "type": "string",
      "description": "FCM token perangkat kedua untuk testing multiple devices"
    },
    {
      "key": "topic_name",
      "value": "test_topic",
      "type": "string",
      "description": "Nama topic untuk testing topic-related endpoints"
    }
  ]
}
